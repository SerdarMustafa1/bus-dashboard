{"version":3,"sources":["components/client/details.jsx","components/client/login.jsx"],"names":["Details","state","campaign","loaded","selected","progress","index","lightbox","controller","AbortController","handleSelection","selection","setState","openLightBox","t","props","pictures","length","Swal","fire","icon","title","text","showConfirmButton","timer","this","abort","query","match","params","id","queryRequest","signal","token","console","log","toString","height","_id","latitude","cities","longitude","zoom","getData","data","campaignVehicles","smooth","details","countList","placements","placement","installs","install","push","vehicle","f","Set","size","Date","getTime","startDate","endDate","Object","keys","className","mainSrc","path","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","Row","Col","xs","client","company","name","onClick","Badge","variant","md","xl","now","timeLeftPercent","map","city","join","vehicles","totalFleets","creator","date","created_at","mapData","getMapData","rowCallback","el","onclick","Component","contextType","AuthContext","translate","View","style","marginLeft","paddingTop","AlertDismiss","type","hide","message","Alert","onClose","dismissible","ClientLogin","password","logging","invalid","connection","handleSubmit","evt","a","preventDefault","campaignLogin","handlePassChange","target","value","Card","Body","href","src","logo","alt","Form","onSubmit","Group","Label","Control","pattern","placeholder","onChange","required","Button","Spinner","animation"],"mappings":"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","file":"static/js/3.2ee0ed4a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport queryRequest from '../../utils/queryRequest';\nimport FleetDetails from '../dashboard/campaigns/fleetDetails';\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport { translate } from 'react-i18next';\nimport Lightbox from 'react-image-lightbox';\n\nimport AuthContext from '../../context/auth-context';\nimport Badge from 'react-bootstrap/Badge';\nimport Swal from 'sweetalert2';\n\nimport {\n  TimeSpan,\n  SaleBy,\n  Cities,\n  Live,\n  InstallProgress,\n  ActivityTable,\n} from '../dashboard/campaignDetails/cards';\n\nclass Details extends Component {\n  state = {\n    campaign: {},\n    loaded: false,\n    selected: '',\n\n    progress: {},\n    index: 0,\n    lightbox: false,\n  };\n\n  controller = new AbortController();\n  static contextType = AuthContext;\n\n  componentWillUnmount() {\n    this.controller.abort();\n  }\n\n  async componentDidMount() {\n    const query = `query{campaign(_id:\"${this.props.match.params.id}\"){\n            _id name client{_id company}creator{_id name}budget startDate endDate created_at cities{name latitude longitude}\n            pictures { path thumbnail created_at }\n            placements{_id place{name} installs{installed vehicle{_id city{name}operator{company operatorId}}created_at count}\n      count isPublic}}}`;\n\n    try {\n      const { campaign } = await queryRequest(\n        query,\n        this.controller.signal,\n        this.props.token\n      );\n      if (campaign) this.setState({ campaign, loaded: true });\n      else this.setState({ loaded: true });\n    } catch (err) {\n      console.log('Ohnoo, ', err.toString());\n      this.setState({ loaded: true });\n    }\n  }\n\n  getMapData() {\n    const query = `query{campaignVehicles(_id: \"${this.state.campaign._id}\"){_id haveAds longitude latitude}}`;\n\n    return {\n      height: 530,\n      query: query,\n      latitude: this.state.campaign.cities[0].latitude,\n      longitude: this.state.campaign.cities[0].longitude,\n      zoom: 7,\n      getData: (data) => data.campaignVehicles,\n      smooth: true,\n      token: this.props.token,\n      details: false,\n    };\n  }\n\n  handleSelection = (selection) => {\n    if (this.state.selected !== selection)\n      this.setState({ selected: selection });\n    else this.setState({ selected: '' });\n  };\n\n  totalFleets() {\n    const countList = [];\n    for (const placement of this.state.campaign.placements)\n      for (const install of placement.installs)\n        countList.push(install.vehicle._id);\n\n    return new Set(countList).size;\n  }\n\n  timeLeftPercent() {\n    return (\n      ((new Date().getTime() - this.state.campaign.startDate) /\n        (this.state.campaign.endDate - this.state.campaign.startDate)) *\n      100\n    );\n  }\n\n  openLightBox = () => {\n    const { t } = this.props;\n    if (\n      this.state.campaign &&\n      this.state.campaign.pictures &&\n      this.state.campaign.pictures.length > 0\n    )\n      this.setState({ lightbox: true });\n    else {\n      Swal.fire({\n        icon: 'info',\n        title: t('db.campaign.images.info.empty.title'),\n        text: t('db.campaign.images.info.empty.text'),\n        showConfirmButton: false,\n        timer: 3000,\n      });\n    }\n  };\n\n  render() {\n    const { t } = this.props;\n    if (this.state.loaded && Object.keys(this.state.campaign).length === 0)\n      return (\n        <div className=\"container-fluid text-center\">\n          <h3 className=\"text-white\">{t('db.campaign.404')}</h3>\n        </div>\n      );\n    const { pictures } = this.state.campaign;\n    const { index } = this.state;\n\n    return (\n      <div className=\"container-fluid\">\n        {this.state.lightbox && (\n          <Lightbox\n            mainSrc={pictures[index].path}\n            nextSrc={pictures[(index + 1) % pictures.length].path}\n            prevSrc={\n              pictures[(index + pictures.length - 1) % pictures.length].path\n            }\n            onCloseRequest={() => this.setState({ lightbox: false })}\n            onMovePrevRequest={() =>\n              this.setState({\n                index: (index + pictures.length - 1) % pictures.length,\n              })\n            }\n            onMoveNextRequest={() =>\n              this.setState({ index: (index + 1) % pictures.length })\n            }\n          />\n        )}\n        <Row className=\"border-bottom mb-4\">\n          <Col xs={12}>\n            <h3 className=\"text-white\">\n              {!this.state.loaded && 'Loading...'}\n              {this.state.loaded &&\n                this.state.campaign.client.company +\n                  ': ' +\n                  this.state.campaign.name}\n              {this.state.loaded && (\n                <div\n                  className=\"float-right campview-images\"\n                  onClick={this.openLightBox}\n                >\n                  <i className=\"ion ion-images\" /> Images{' '}\n                  <Badge variant={pictures.length ? 'success' : 'danger'}>\n                    {pictures.length}\n                  </Badge>\n                </div>\n              )}\n            </h3>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col md={12} xl={4} className=\"mb-4\">\n            <TimeSpan\n              data={{\n                loaded: this.state.loaded,\n                startDate: this.state.loaded && this.state.campaign.startDate,\n                endDate: this.state.loaded && this.state.campaign.endDate,\n                now: this.state.loaded && this.timeLeftPercent(),\n              }}\n            />\n          </Col>\n          <Col md={6} xl={4}>\n            <Cities\n              data={{\n                loaded: this.state.loaded,\n                cities:\n                  this.state.loaded &&\n                  this.state.campaign.cities\n                    .map((city) => city.name)\n                    .join(', '),\n                vehicles: this.state.loaded && this.totalFleets(),\n              }}\n            />\n          </Col>\n\n          <Col md={6} xl={4}>\n            <SaleBy\n              data={{\n                loaded: this.state.loaded,\n                creator: this.state.loaded && this.state.campaign.creator,\n                date: this.state.loaded && this.state.campaign.created_at,\n              }}\n            />\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xl={8}>\n            <Live\n              data={{\n                loaded: this.state.loaded,\n                mapData: this.state.loaded && this.getMapData(),\n                selected: this.state.selected,\n                handleSelection: this.handleSelection,\n              }}\n            />\n          </Col>\n\n          <Col xl={4}>\n            <InstallProgress\n              data={{\n                loaded: this.state.loaded,\n                placements: this.state.loaded && this.state.campaign.placements,\n              }}\n            />\n          </Col>\n        </Row>\n\n        <Row>\n          {this.state.loaded && (\n            <Col xl={8}>\n              <ActivityTable\n                data={{\n                  placements: this.state.campaign.placements,\n                  rowCallback: (el, data) =>\n                    (el.onclick = () => this.handleSelection(data._id)),\n                }}\n              />\n            </Col>\n          )}\n\n          {this.state.selected && (\n            <Col xl={4}>\n              <FleetDetails\n                data={this.state.selected}\n                token={this.props.token}\n              />\n            </Col>\n          )}\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default translate()(Details);\n","import React, { Component } from 'react';\nimport queryRequest from '../../utils/queryRequest';\n\nimport { translate } from 'react-i18next';\n\nimport CampaignDetails from './details';\n\nimport Alert from 'react-bootstrap/Alert';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Row from 'react-bootstrap/Row';\nimport LanguageSelector from '../../utils/languageSelector';\n\nimport logo from '../../images/logo.svg';\n\nconst View = translate()(({ t, token, match }) => (\n  <div id=\"wrapper\">\n    <div className=\"content-page\" style={{ marginLeft: 0 }}>\n      <div className=\"content\">\n        <div className=\"page-content-wrapper\" style={{ paddingTop: 0 }}>\n          <CampaignDetails token={token} match={match} client={true} />\n        </div>\n      </div>\n      <footer className=\"footer\">© {t('company.name')}</footer>\n    </div>\n  </div>\n));\n\nconst AlertDismiss = ({ type, hide, message }) => (\n  <Alert className=\"mt-2\" variant={type} onClose={() => hide()} dismissible>\n    {message}\n  </Alert>\n);\n\nclass ClientLogin extends Component {\n  state = {\n    password: '',\n    logging: null,\n    invalid: false,\n    connection: false,\n    token: '',\n  };\n  controller = new AbortController();\n\n  componentWillUnmount() {\n    this.controller.abort();\n  }\n\n  handleSubmit = async (evt) => {\n    evt.preventDefault();\n    if (!this.state.password) return;\n    this.setState({ logging: true });\n    const query = `query{campaignLogin(_id:\"${this.props.match.params.id}\",password:\"${this.state.password}\")}`;\n    try {\n      const { campaignLogin } = await queryRequest(\n        query,\n        this.controller.signal\n      );\n      if (campaignLogin) this.setState({ token: campaignLogin });\n      else this.setState({ invalid: true, logging: false });\n    } catch (err) {\n      if (err.name === 'SyntaxError') {\n        this.setState({ connection: true, logging: false });\n      } else {\n        this.setState({ invalid: true, logging: false });\n      }\n    }\n  };\n\n  handlePassChange = (evt) => this.setState({ password: evt.target.value });\n\n  render() {\n    if (this.state.token) {\n      return <View token={this.state.token} match={this.props.match} />;\n    }\n\n    const { t } = this.props;\n    return (\n      <div className=\"wrapper-page\">\n        <Card>\n          <Card.Body>\n            <div className=\"p-2\">\n              <h3 className=\"text-center m-0\">\n                <a href=\"/\" className=\"logo logo-admin\">\n                  <img src={logo} height=\"100\" alt=\"logo\" />\n                </a>\n              </h3>\n\n              {this.state.invalid && (\n                <AlertDismiss\n                  message={t('login.failed.invalid')}\n                  hide={() => this.setState({ invalid: false })}\n                  type=\"danger\"\n                />\n              )}\n              {this.state.connection && (\n                <AlertDismiss\n                  message={t('login.failed.connection')}\n                  hide={() => this.setState({ connection: false })}\n                  type=\"warning\"\n                />\n              )}\n\n              <Form onSubmit={this.handleSubmit}>\n                <Form.Group>\n                  <Form.Label>{t('login.password.label')}</Form.Label>\n                  <Form.Control\n                    pattern=\".{6,}\"\n                    type=\"password\"\n                    placeholder={t('login.password.placeholder')}\n                    value={this.state.password}\n                    onChange={this.handlePassChange}\n                    required\n                  />\n                </Form.Group>\n                <Form.Group className=\"m-t-20\">\n                  <Col xs={12} className=\"text-right\">\n                    <Button\n                      variant=\"primary\"\n                      className=\"w-md waves-effect waves-light\"\n                      type=\"submit\"\n                    >\n                      {this.state.logging && (\n                        <Spinner\n                          animation=\"border\"\n                          size=\"sm\"\n                          className=\"mr-1\"\n                        />\n                      )}\n                      {t('login.button.submit.label')}\n                    </Button>\n                  </Col>\n                </Form.Group>\n              </Form>\n\n              <Row>\n                <Col className=\"m-t-20 p-0\"></Col>\n                <Col xs={2} className=\"m-t-20 p-0\">\n                  <LanguageSelector />\n                </Col>\n              </Row>\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default translate()(ClientLogin);\n"],"sourceRoot":""}